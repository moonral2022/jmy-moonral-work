package com.moonral.work.concurrent;

/**
 * 并发专题：1.操作系统底层工作的整体认识
 *
 * @author 江梦原
 * @date 2022-07-12
 */
public class J01_OperatingSystem {

    /**
     * 1.cpu 3级缓存
     *   L1：包含指令存储单元和数据存储单元，逻辑核独占
     *   L2：物理核独占，逻辑核共享
     *   L3：cpu中的所有物理内核共享，其他cpu不可以访问
     *  存储空间大小：内存 > L3 > L2 > L1 > 寄存器
     *  存储器速度快慢： 寄存器 > L1 > L2 > L3 > 内存
     *
     *  缓存由最小的存储区块-缓存行（cacheline）组成，缓存行大小通常为64byte
     *
     *  2.内存单位以及转换？
     *
     *  3.空间局部性原则：cpu读取内存的数据时，附近位置的数据也可能被读取
     *    时间局部性：如果一个信息正在被访问，那么在近期它很可能还会被再此访问
     *
     *  4.带有高速缓存的cpu执行计算的流程
     *    程序以及数据被加载主内存
     *    指令和数据被加载到cpu的高速缓存
     *    cpu执行指令，把结果写到高速缓存
     *    高速缓存中的数据写回主内存
     *
     *  5.操作系统
     *  1个线程有两个堆栈，一个在操作系统内核空间，一个在用户空间
     *  内核态：
     *  用户态：
     *  上下文切换：
     *  运行状态切换：
     *
     *  6.KLT（内核线程模型，java用KLT） 和 ULT（用户线程模型）
     *
     *  7.cpu安全运行级别：
     *  ring0， ring1，ring2，ring3
     *
     *  8.虚拟机指令集架构
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     */
}
